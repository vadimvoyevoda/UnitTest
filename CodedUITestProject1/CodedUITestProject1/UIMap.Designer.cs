// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// CleanRecycleBin
        /// </summary>
        public void CleanRecycleBin()
        {
            #region Variable Declarations
            WinList uIРабочийстолList = this.UIProgramManagerWindow.UIFolderViewWindow.UIРабочийстолList;
            WinMenuItem uIТекстовыйдокументMenuItem = this.UIItemWindow.UIСоздатьMenuItem.UIТекстовыйдокументMenuItem;
            WinListItem uIНовыйтекстовыйдокумеListItem = this.UIProgramManagerWindow.UIРабочийстолList.UIНовыйтекстовыйдокумеListItem;
            WinMenuItem uIУдалитьMenuItem = this.UIItemWindow.UIКонтекстMenu.UIУдалитьMenuItem;
            WinButton uIДАButton = this.UIУдалитьфайлWindow.UIДАWindow.UIДАButton;
            WinListItem uIКорзинаListItem = this.UIProgramManagerWindow.UIРабочийстолList.UIКорзинаListItem;
            WinButton uIОчиститькорзинуButton = this.UIКорзинаWindow.UIКомандныймодульToolBar.UIОчиститькорзинуButton;
            WinButton uIДАButton1 = this.UIУдалениенесколькихэлWindow.UIДАWindow.UIДАButton;
            #endregion

            // Right-Click 'Рабочий стол' list box
            Mouse.Click(uIРабочийстолList, MouseButtons.Right, ModifierKeys.None, new Point(772, 478));

            // Click 'Создать' -> 'Текстовый документ' menu item
            Mouse.Click(uIТекстовыйдокументMenuItem, new Point(41, 6));

            // Click 'Рабочий стол' list box
            Mouse.Click(uIРабочийстолList, new Point(891, 494));

            // Right-Click 'Новый текстовый документ' list item
            Mouse.Click(uIНовыйтекстовыйдокумеListItem, MouseButtons.Right, ModifierKeys.None, new Point(29, 41));

            // Click 'Удалить' menu item
            Mouse.Click(uIУдалитьMenuItem, new Point(48, 10));

            // Click 'Д&а' button
            Mouse.Click(uIДАButton, new Point(48, 15));

            // Double-Click 'Корзина' list item
            Mouse.DoubleClick(uIКорзинаListItem, new Point(33, 10));

            // Click 'Очистить корзину' button
            Mouse.Click(uIОчиститькорзинуButton, new Point(73, 17));

            // Click 'Д&а' button
            Mouse.Click(uIДАButton1, new Point(65, 15));
        }
        
        /// <summary>
        /// AssertItemsLost - Use 'AssertItemsLostExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertItemsLost()
        {
            #region Variable Declarations
            WinEdit uIЧислообъектовEdit = this.UIКорзинаWindow.UIМодульметаданныхTree.UIЧислообъектовEdit;
            #endregion

            // Verify that the 'Text' property of 'Число объектов' text box equals 'Элементов: 0'
            Assert.AreEqual(this.AssertItemsLostExpectedValues.UIЧислообъектовEditText, uIЧислообъектовEdit.Text, "NotClean");
        }
        
        #region Properties
        public virtual AssertItemsLostExpectedValues AssertItemsLostExpectedValues
        {
            get
            {
                if ((this.mAssertItemsLostExpectedValues == null))
                {
                    this.mAssertItemsLostExpectedValues = new AssertItemsLostExpectedValues();
                }
                return this.mAssertItemsLostExpectedValues;
            }
        }
        
        public UIProgramManagerWindow UIProgramManagerWindow
        {
            get
            {
                if ((this.mUIProgramManagerWindow == null))
                {
                    this.mUIProgramManagerWindow = new UIProgramManagerWindow();
                }
                return this.mUIProgramManagerWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIУдалитьфайлWindow UIУдалитьфайлWindow
        {
            get
            {
                if ((this.mUIУдалитьфайлWindow == null))
                {
                    this.mUIУдалитьфайлWindow = new UIУдалитьфайлWindow();
                }
                return this.mUIУдалитьфайлWindow;
            }
        }
        
        public UIКорзинаWindow UIКорзинаWindow
        {
            get
            {
                if ((this.mUIКорзинаWindow == null))
                {
                    this.mUIКорзинаWindow = new UIКорзинаWindow();
                }
                return this.mUIКорзинаWindow;
            }
        }
        
        public UIУдалениенесколькихэлWindow UIУдалениенесколькихэлWindow
        {
            get
            {
                if ((this.mUIУдалениенесколькихэлWindow == null))
                {
                    this.mUIУдалениенесколькихэлWindow = new UIУдалениенесколькихэлWindow();
                }
                return this.mUIУдалениенесколькихэлWindow;
            }
        }
        #endregion
        
        #region Fields
        private AssertItemsLostExpectedValues mAssertItemsLostExpectedValues;
        
        private UIProgramManagerWindow mUIProgramManagerWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIУдалитьфайлWindow mUIУдалитьфайлWindow;
        
        private UIКорзинаWindow mUIКорзинаWindow;
        
        private UIУдалениенесколькихэлWindow mUIУдалениенесколькихэлWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertItemsLost'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertItemsLostExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'Число объектов' text box equals 'Элементов: 0'
        /// </summary>
        public string UIЧислообъектовEditText = "Элементов: 0";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIProgramManagerWindow : WinWindow
    {
        
        public UIProgramManagerWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Program Manager";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Progman";
            this.WindowTitles.Add("Program Manager");
            #endregion
        }
        
        #region Properties
        public UIFolderViewWindow UIFolderViewWindow
        {
            get
            {
                if ((this.mUIFolderViewWindow == null))
                {
                    this.mUIFolderViewWindow = new UIFolderViewWindow(this);
                }
                return this.mUIFolderViewWindow;
            }
        }
        
        public UIРабочийстолList UIРабочийстолList
        {
            get
            {
                if ((this.mUIРабочийстолList == null))
                {
                    this.mUIРабочийстолList = new UIРабочийстолList(this);
                }
                return this.mUIРабочийстолList;
            }
        }
        #endregion
        
        #region Fields
        private UIFolderViewWindow mUIFolderViewWindow;
        
        private UIРабочийстолList mUIРабочийстолList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIFolderViewWindow : WinWindow
    {
        
        public UIFolderViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Program Manager");
            #endregion
        }
        
        #region Properties
        public WinList UIРабочийстолList
        {
            get
            {
                if ((this.mUIРабочийстолList == null))
                {
                    this.mUIРабочийстолList = new WinList(this);
                    #region Search Criteria
                    this.mUIРабочийстолList.SearchProperties[WinList.PropertyNames.Name] = "Рабочий стол";
                    this.mUIРабочийстолList.WindowTitles.Add("Program Manager");
                    #endregion
                }
                return this.mUIРабочийстолList;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUIРабочийстолList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIРабочийстолList : WinList
    {
        
        public UIРабочийстолList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "Рабочий стол";
            this.WindowTitles.Add("Program Manager");
            #endregion
        }
        
        #region Properties
        public WinListItem UIНовыйтекстовыйдокумеListItem
        {
            get
            {
                if ((this.mUIНовыйтекстовыйдокумеListItem == null))
                {
                    this.mUIНовыйтекстовыйдокумеListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIНовыйтекстовыйдокумеListItem.SearchProperties[WinListItem.PropertyNames.Name] = "Новый текстовый документ";
                    this.mUIНовыйтекстовыйдокумеListItem.WindowTitles.Add("Program Manager");
                    #endregion
                }
                return this.mUIНовыйтекстовыйдокумеListItem;
            }
        }
        
        public WinListItem UIКорзинаListItem
        {
            get
            {
                if ((this.mUIКорзинаListItem == null))
                {
                    this.mUIКорзинаListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIКорзинаListItem.SearchProperties[WinListItem.PropertyNames.Name] = "Корзина";
                    this.mUIКорзинаListItem.WindowTitles.Add("Program Manager");
                    #endregion
                }
                return this.mUIКорзинаListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIНовыйтекстовыйдокумеListItem;
        
        private WinListItem mUIКорзинаListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Контекст";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32768";
            #endregion
        }
        
        #region Properties
        public UIСоздатьMenuItem UIСоздатьMenuItem
        {
            get
            {
                if ((this.mUIСоздатьMenuItem == null))
                {
                    this.mUIСоздатьMenuItem = new UIСоздатьMenuItem(this);
                }
                return this.mUIСоздатьMenuItem;
            }
        }
        
        public UIКонтекстMenu UIКонтекстMenu
        {
            get
            {
                if ((this.mUIКонтекстMenu == null))
                {
                    this.mUIКонтекстMenu = new UIКонтекстMenu(this);
                }
                return this.mUIКонтекстMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIСоздатьMenuItem mUIСоздатьMenuItem;
        
        private UIКонтекстMenu mUIКонтекстMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIСоздатьMenuItem : WinMenuItem
    {
        
        public UIСоздатьMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "Создать";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIТекстовыйдокументMenuItem
        {
            get
            {
                if ((this.mUIТекстовыйдокументMenuItem == null))
                {
                    this.mUIТекстовыйдокументMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIТекстовыйдокументMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Текстовый документ";
                    this.mUIТекстовыйдокументMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    #endregion
                }
                return this.mUIТекстовыйдокументMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIТекстовыйдокументMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIКонтекстMenu : WinMenu
    {
        
        public UIКонтекстMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Контекст";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIУдалитьMenuItem
        {
            get
            {
                if ((this.mUIУдалитьMenuItem == null))
                {
                    this.mUIУдалитьMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIУдалитьMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Удалить";
                    #endregion
                }
                return this.mUIУдалитьMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIУдалитьMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIУдалитьфайлWindow : WinWindow
    {
        
        public UIУдалитьфайлWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Удалить файл";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Удалить файл");
            #endregion
        }
        
        #region Properties
        public UIДАWindow UIДАWindow
        {
            get
            {
                if ((this.mUIДАWindow == null))
                {
                    this.mUIДАWindow = new UIДАWindow(this);
                }
                return this.mUIДАWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIДАWindow mUIДАWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIДАWindow : WinWindow
    {
        
        public UIДАWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("Удалить файл");
            #endregion
        }
        
        #region Properties
        public WinButton UIДАButton
        {
            get
            {
                if ((this.mUIДАButton == null))
                {
                    this.mUIДАButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIДАButton.SearchProperties[WinButton.PropertyNames.Name] = "Да";
                    this.mUIДАButton.WindowTitles.Add("Удалить файл");
                    #endregion
                }
                return this.mUIДАButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIДАButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIКорзинаWindow : WinWindow
    {
        
        public UIКорзинаWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Корзина";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Корзина");
            #endregion
        }
        
        #region Properties
        public UIКомандныймодульToolBar UIКомандныймодульToolBar
        {
            get
            {
                if ((this.mUIКомандныймодульToolBar == null))
                {
                    this.mUIКомандныймодульToolBar = new UIКомандныймодульToolBar(this);
                }
                return this.mUIКомандныймодульToolBar;
            }
        }
        
        public UIМодульметаданныхTree UIМодульметаданныхTree
        {
            get
            {
                if ((this.mUIМодульметаданныхTree == null))
                {
                    this.mUIМодульметаданныхTree = new UIМодульметаданныхTree(this);
                }
                return this.mUIМодульметаданныхTree;
            }
        }
        #endregion
        
        #region Fields
        private UIКомандныймодульToolBar mUIКомандныймодульToolBar;
        
        private UIМодульметаданныхTree mUIМодульметаданныхTree;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIКомандныймодульToolBar : WinToolBar
    {
        
        public UIКомандныймодульToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Командный модуль";
            this.WindowTitles.Add("Корзина");
            #endregion
        }
        
        #region Properties
        public WinButton UIОчиститькорзинуButton
        {
            get
            {
                if ((this.mUIОчиститькорзинуButton == null))
                {
                    this.mUIОчиститькорзинуButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIОчиститькорзинуButton.SearchProperties[WinButton.PropertyNames.Name] = "Очистить корзину";
                    this.mUIОчиститькорзинуButton.WindowTitles.Add("Корзина");
                    #endregion
                }
                return this.mUIОчиститькорзинуButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIОчиститькорзинуButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIМодульметаданныхTree : WinTree
    {
        
        public UIМодульметаданныхTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTree.PropertyNames.Name] = "Модуль метаданных";
            this.WindowTitles.Add("Корзина");
            #endregion
        }
        
        #region Properties
        public WinEdit UIЧислообъектовEdit
        {
            get
            {
                if ((this.mUIЧислообъектовEdit == null))
                {
                    this.mUIЧислообъектовEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIЧислообъектовEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Число объектов";
                    this.mUIЧислообъектовEdit.WindowTitles.Add("Корзина");
                    #endregion
                }
                return this.mUIЧислообъектовEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIЧислообъектовEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIУдалениенесколькихэлWindow : WinWindow
    {
        
        public UIУдалениенесколькихэлWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Удаление нескольких элементов";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Удаление нескольких элементов");
            #endregion
        }
        
        #region Properties
        public UIДАWindow1 UIДАWindow
        {
            get
            {
                if ((this.mUIДАWindow == null))
                {
                    this.mUIДАWindow = new UIДАWindow1(this);
                }
                return this.mUIДАWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIДАWindow1 mUIДАWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIДАWindow1 : WinWindow
    {
        
        public UIДАWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("Удаление нескольких элементов");
            #endregion
        }
        
        #region Properties
        public WinButton UIДАButton
        {
            get
            {
                if ((this.mUIДАButton == null))
                {
                    this.mUIДАButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIДАButton.SearchProperties[WinButton.PropertyNames.Name] = "Да";
                    this.mUIДАButton.WindowTitles.Add("Удаление нескольких элементов");
                    #endregion
                }
                return this.mUIДАButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIДАButton;
        #endregion
    }
}
